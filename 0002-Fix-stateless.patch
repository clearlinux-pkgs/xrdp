From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Tue, 10 Jul 2018 02:24:16 +0000
Subject: [PATCH] Fix stateless

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
---
 common/os_calls.c             | 30 ++++++++++++++++++++++++++++++
 common/os_calls.h             |  1 +
 libxrdp/xrdp_rdp.c            |  2 +-
 libxrdp/xrdp_sec.c            |  4 ++--
 sesman/chansrv/chansrv.c      |  2 +-
 sesman/chansrv/chansrv_fuse.c |  2 +-
 sesman/config.c               |  2 +-
 sesman/sesman.c               |  2 +-
 sesman/sig.c                  |  2 +-
 xrdp/lang.c                   |  6 +++---
 xrdp/xrdp.c                   |  4 ++--
 xrdp/xrdp_listen.c            |  2 +-
 xrdp/xrdp_login_wnd.c         |  4 ++--
 xrdp/xrdp_mm.c                |  2 +-
 xrdp/xrdp_wm.c                |  6 +++---
 15 files changed, 51 insertions(+), 20 deletions(-)

diff --git a/common/os_calls.c b/common/os_calls.c
index 2b4e0e9..37aab51 100644
--- a/common/os_calls.c
+++ b/common/os_calls.c
@@ -3842,6 +3842,36 @@ g_mirror_memcpy(void *dst, const void *src, int len)
     return 0;
 }
 
+void g_snprintf_config(char *dest, int size, const char *fmt, ...)
+{
+    char *user_fmtd = alloca(size);
+    va_list ap;
+    int err;
+
+    va_start(ap, fmt);
+    err = vsnprintf(user_fmtd, size, fmt, ap);
+    va_end(ap);
+    if (err >= size)
+        goto out;
+
+    if (snprintf(dest, size, XRDP_CFG_PATH"/%s", user_fmtd) >= size)
+        goto out;
+    if (!access(dest, R_OK))
+        return;
+
+    if (snprintf(dest, size, "/usr/share/defaults/xrdp/%s", user_fmtd) >= size)
+        goto out;
+    if (!access(dest, R_OK))
+        return;
+
+    snprintf(dest, size, XRDP_CFG_PATH"/%s", user_fmtd);
+    return;
+
+out:
+    fprintf(stderr, "Buffer exceeds given size, aborting");
+    abort();
+}
+
 /*****************************************************************************/
 int
 g_tcp4_socket(void)
diff --git a/common/os_calls.h b/common/os_calls.h
index b52a84d..ad9435b 100644
--- a/common/os_calls.h
+++ b/common/os_calls.h
@@ -183,6 +183,7 @@ int      g_text2bool(const char *s);
 void *   g_shmat(int shmid);
 int      g_shmdt(const void *shmaddr);
 int      g_gethostname(char *name, int len);
+void     g_snprintf_config(char *dest, int size, const char *fmt, ...) printflike(3, 4);
 int      g_mirror_memcpy(void *dst, const void *src, int len);
 int      g_tcp4_socket(void);
 int      g_tcp4_bind_address(int sck, const char *port, const char *address);
diff --git a/libxrdp/xrdp_rdp.c b/libxrdp/xrdp_rdp.c
index 351e367..32db350 100644
--- a/libxrdp/xrdp_rdp.c
+++ b/libxrdp/xrdp_rdp.c
@@ -60,7 +60,7 @@ xrdp_rdp_read_config(struct xrdp_client_info *client_info)
     items->auto_free = 1;
     values = list_create();
     values->auto_free = 1;
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
     DEBUG(("cfg_file %s", cfg_file));
     file_by_name_read_section(cfg_file, "globals", items, values);
 
diff --git a/libxrdp/xrdp_sec.c b/libxrdp/xrdp_sec.c
index 31197ab..07a73a2 100644
--- a/libxrdp/xrdp_sec.c
+++ b/libxrdp/xrdp_sec.c
@@ -260,7 +260,7 @@ xrdp_load_keyboard_layout(struct xrdp_client_info *client_info)
         client_info->keyboard_subtype = 1;
     }
 
-    g_snprintf(keyboard_cfg_file, 255, "%s/xrdp_keyboard.ini", XRDP_CFG_PATH);
+    g_snprintf_config(keyboard_cfg_file, 255, "xrdp_keyboard.ini");
     LLOGLN(10, ("keyboard_cfg_file %s", keyboard_cfg_file));
 
     fd = g_file_open(keyboard_cfg_file);
@@ -2302,7 +2302,7 @@ xrdp_sec_incoming(struct xrdp_sec *self)
             items->auto_free = 1;
             values = list_create();
             values->auto_free = 1;
-            g_snprintf(key_file, 255, "%s/rsakeys.ini", XRDP_CFG_PATH);
+            g_snprintf_config(key_file, 255, "rsakeys.ini");
 
             if (file_by_name_read_section(key_file, "keys", items, values) != 0)
             {
diff --git a/sesman/chansrv/chansrv.c b/sesman/chansrv/chansrv.c
index 6b1b932..5eb6994 100644
--- a/sesman/chansrv/chansrv.c
+++ b/sesman/chansrv/chansrv.c
@@ -1640,7 +1640,7 @@ read_ini(void)
     values = list_create();
     values->auto_free = 1;
     g_use_unix_socket = 0;
-    g_snprintf(filename, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(filename, 255, "sesman.ini");
 
     if (file_by_name_read_section(filename, "Globals", names, values) == 0)
     {
diff --git a/sesman/chansrv/chansrv_fuse.c b/sesman/chansrv/chansrv_fuse.c
index 842bca0..031163d 100644
--- a/sesman/chansrv/chansrv_fuse.c
+++ b/sesman/chansrv/chansrv_fuse.c
@@ -414,7 +414,7 @@ load_fuse_config(void)
     items->auto_free = 1;
     values = list_create();
     values->auto_free = 1;
-    g_snprintf(cfg_file, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "sesman.ini");
     file_by_name_read_section(cfg_file, "Chansrv", items, values);
     for (index = 0; index < items->count; index++)
     {
diff --git a/sesman/config.c b/sesman/config.c
index c508dfa..73af087 100644
--- a/sesman/config.c
+++ b/sesman/config.c
@@ -46,7 +46,7 @@ config_read(struct config_sesman *cfg)
     struct list *param_v;
     char cfg_file[256];
 
-    g_snprintf(cfg_file, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "sesman.ini");
     fd = g_file_open(cfg_file);
 
     if (-1 == fd)
diff --git a/sesman/sesman.c b/sesman/sesman.c
index 73c7d0a..2d7d78e 100644
--- a/sesman/sesman.c
+++ b/sesman/sesman.c
@@ -317,7 +317,7 @@ main(int argc, char **argv)
         config_dump(g_cfg);
     }
 
-    g_snprintf(cfg_file, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "sesman.ini");
 
     /* starting logging subsystem */
     log_error = log_start(cfg_file, "xrdp-sesman");
diff --git a/sesman/sig.c b/sesman/sig.c
index 782e8fe..5fdd9ac 100644
--- a/sesman/sig.c
+++ b/sesman/sig.c
@@ -101,7 +101,7 @@ sig_sesman_reload_cfg(int sig)
     /* replace old config with newly read one */
     g_cfg = cfg;
 
-    g_snprintf(cfg_file, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "sesman.ini");
 
     /* start again logging subsystem */
     error = log_start(cfg_file, "xrdp-sesman");
diff --git a/xrdp/lang.c b/xrdp/lang.c
index ff24259..a8ebc94 100644
--- a/xrdp/lang.c
+++ b/xrdp/lang.c
@@ -237,21 +237,21 @@ get_keymaps(int keylayout, struct xrdp_keymap *keymap)
     filename = (char *)g_malloc(256, 0);
 
     /* check if there is a keymap file e.g. km-e00100411.ini */
-    g_snprintf(filename, 255, "%s/km-%08x.ini", XRDP_CFG_PATH, keylayout);
+    g_snprintf_config(filename, 255, "km-%08x.ini", keylayout);
 
     /* if the file does not exist, use only lower 16 bits instead */
     if (!g_file_exist(filename))
     {
         log_message(LOG_LEVEL_INFO, "Cannot find keymap file %s", filename);
         /* e.g. km-00000411.ini */
-        g_snprintf(filename, 255, "%s/km-%08x.ini", XRDP_CFG_PATH, basic_key_layout);
+        g_snprintf_config(filename, 255, "km-%08x.ini", basic_key_layout);
     }
 
     /* finally, use 'en-us' */
     if (!g_file_exist(filename))
     {
         log_message(LOG_LEVEL_INFO, "Cannot find keymap file %s", filename);
-        g_snprintf(filename, 255, "%s/km-00000409.ini", XRDP_CFG_PATH);
+        g_snprintf_config(filename, 255, "km-00000409.ini");
     }
 
     if (g_file_exist(filename))
diff --git a/xrdp/xrdp.c b/xrdp/xrdp.c
index f343580..219f752 100644
--- a/xrdp/xrdp.c
+++ b/xrdp/xrdp.c
@@ -401,7 +401,7 @@ xrdp_sanity_check(void)
         return 1;
     }
 
-    g_snprintf(key_file, 255, "%s/rsakeys.ini", XRDP_CFG_PATH);
+    g_snprintf_config(key_file, 255, "rsakeys.ini");
     if (!g_file_exist(key_file))
     {
         g_writeln("File %s is missing, create it using xrdp-keygen", key_file);
@@ -435,7 +435,7 @@ main(int argc, char **argv)
         DEBUG(("Argument %i - %s", test, argv[test]));
     }
 
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
 
     startup_params = (struct xrdp_startup_params *)
                      g_malloc(sizeof(struct xrdp_startup_params), 1);
diff --git a/xrdp/xrdp_listen.c b/xrdp/xrdp_listen.c
index 9632edd..622400b 100644
--- a/xrdp/xrdp_listen.c
+++ b/xrdp/xrdp_listen.c
@@ -170,7 +170,7 @@ xrdp_listen_get_startup_params(struct xrdp_listen *self)
     startup_params = self->startup_params;
     port_override = startup_params->port[0] != 0;
     fork_override = startup_params->fork;
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
     fd = g_file_open(cfg_file);
     if (fd != -1)
     {
diff --git a/xrdp/xrdp_login_wnd.c b/xrdp/xrdp_login_wnd.c
index c09f800..1cd5203 100644
--- a/xrdp/xrdp_login_wnd.c
+++ b/xrdp/xrdp_login_wnd.c
@@ -568,7 +568,7 @@ xrdp_wm_login_fill_in_combo(struct xrdp_wm *self, struct xrdp_bitmap *b)
     section_names->auto_free = 1;
     section_values = list_create();
     section_values->auto_free = 1;
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
     fd = g_file_open(cfg_file); /* xrdp.ini */
 
     if (fd < 0)
@@ -873,7 +873,7 @@ load_xrdp_config(struct xrdp_config *config, int bpp)
     globals->ls_btn_cancel_height = 30;
 
     /* open xrdp.ini file */
-    g_snprintf(buf, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(buf, 255, "xrdp.ini");
     if ((fd = g_file_open(buf)) < 0)
     {
         log_message(LOG_LEVEL_ERROR,"load_config: Could not read "
diff --git a/xrdp/xrdp_mm.c b/xrdp/xrdp_mm.c
index 64c7560..43eedce 100644
--- a/xrdp/xrdp_mm.c
+++ b/xrdp/xrdp_mm.c
@@ -1632,7 +1632,7 @@ xrdp_mm_get_sesman_port(char *port, int port_bytes)
     /* default to port 3350 */
     g_strncpy(port, "3350", port_bytes - 1);
     /* see if port is in sesman.ini file */
-    g_snprintf(cfg_file, 255, "%s/sesman.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "sesman.ini");
     fd = g_file_open(cfg_file);
 
     if (fd >= 0)
diff --git a/xrdp/xrdp_wm.c b/xrdp/xrdp_wm.c
index f68b11e..92e8e3d 100644
--- a/xrdp/xrdp_wm.c
+++ b/xrdp/xrdp_wm.c
@@ -414,7 +414,7 @@ xrdp_wm_load_static_colors_plus(struct xrdp_wm *self, char *autorun_name)
     self->background = HCOLOR(self->screen->bpp, 0x000000);
 
     /* now load them from the globals in xrdp.ini if defined */
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
     fd = g_file_open(cfg_file);
 
     if (fd >= 0)
@@ -580,7 +580,7 @@ xrdp_wm_init(struct xrdp_wm *self)
     names->auto_free = 1;
     values = list_create();
     values->auto_free = 1;
-    g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+    g_snprintf_config(cfg_file, 255, "xrdp.ini");
     if (file_by_name_read_section(cfg_file, "Channels", names, values) == 0)
     {
         int error;
@@ -648,7 +648,7 @@ xrdp_wm_init(struct xrdp_wm *self)
          * NOTE: this should eventually be accessed from self->xrdp_config
          */
 
-        g_snprintf(cfg_file, 255, "%s/xrdp.ini", XRDP_CFG_PATH);
+        g_snprintf_config(cfg_file, 255, "xrdp.ini");
         fd = g_file_open(cfg_file); /* xrdp.ini */
         if (fd != -1)
         {
